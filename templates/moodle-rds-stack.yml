---
AWSTemplateFormatVersion: '2010-09-09'

Description:  A stack for deploying moodle cluster. 
              https://github.com/aws-samples/aws-refarch-wordpress
              https://www.gosquared.com/blog/simple-high-availability-wordpress-hosting-on-aws

Parameters:
  env:
    Description: Environment name to provision resources
    Type: String
    AllowedValues: ["dev", "prod"]
    Default: dev
  project:
    Description: Project name to provision resources
    Type: String
    Default: moodle
  VpcStackName:
    Description: moodle vpc stack name
    Type: String
    AllowedValues: ["moodle-vpc-stack-dev", "moodle-vpc-stack-prod"]
    Default: moodle-vpc-stack-dev

  # aurora db parameters
  DatabaseUsername:
    AllowedPattern: "[a-zA-Z0-9]+"
    ConstraintDescription: must be between 1 to 16 alphanumeric characters.
    Description: The database admin account user name, between 1 to 16 alphanumeric characters.
    MaxLength: '16'
    MinLength: '1'
    Type: String
  DatabasePassword:
    AllowedPattern: "[a-zA-Z0-9]+"
    ConstraintDescription: must be between 8 to 41 alphanumeric characters.
    Description: The database admin account password, between 8 to 41 alphanumeric characters.
    MaxLength: '41'
    MinLength: '8'
    NoEcho: 'true'
    Type: String

Mappings:
  BackupRetentionPeriod: 
    dev: 
      RetentionPeriod: 1
    prod: 
      RetentionPeriod: 7
  DBInstanceClass:
    dev: 
      Type: 'db.t3.small'
    prod: 
      Type: 'db.t3.small'

Resources:

  # rds aurora db cluster
  DatabaseSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: CloudFormation managed DB subnet group.
      SubnetIds: 
        - Fn::ImportValue: 
            !Join ['-', [!Ref 'VpcStackName', 'PrivateSubnet0']]
        - Fn::ImportValue: 
            !Join ['-', [!Ref 'VpcStackName', 'PrivateSubnet1']]
      Tags:
        - Key: Name
          Value: !Join [ '-', [ !Ref 'project', !Ref 'env', 'DatabaseSubnetGroup' ] ]
        - Key: Createdby
          Value: !Ref 'AWS::StackName'

  DatabaseCluster:
    Type: AWS::RDS::DBCluster
    Properties:
      Engine: aurora
      DBClusterIdentifier: !Join [ '-', [ !Ref 'project', !Ref 'env', 'dbcluster' ] ]
      MasterUsername: !Ref DatabaseUsername
      MasterUserPassword: !Ref DatabasePassword
      BackupRetentionPeriod: !FindInMap [BackupRetentionPeriod, !Ref env, RetentionPeriod]
      PreferredBackupWindow: 01:00-02:00
      PreferredMaintenanceWindow: mon:03:00-mon:04:00
      DBSubnetGroupName: !Ref DatabaseSubnetGroup
      VpcSecurityGroupIds: 
        - Fn::ImportValue: 
            !Join ['-', [!Ref 'VpcStackName', 'DbClusterSG']]
      Tags:
        - Key: Name
          Value: !Join [ '-', [ !Ref 'project', !Ref 'env', 'DatabaseCluster' ] ]
        - Key: Createdby
          Value: !Ref 'AWS::StackName'

  DatabasePrimaryInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      Engine: aurora
      DBClusterIdentifier: !Ref DatabaseCluster
      DBInstanceClass: !FindInMap [DBInstanceClass, !Ref env, Type]
      DBSubnetGroupName: !Ref DatabaseSubnetGroup

  DatabaseReplicaInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      Engine: aurora
      DBClusterIdentifier: !Ref DatabaseCluster
      DBInstanceClass: !FindInMap [DBInstanceClass, !Ref env, Type]
      DBSubnetGroupName: !Ref DatabaseSubnetGroup

Outputs:

  DBClusterName:
    Description: The name of this Database cluster
    Value: !Ref 'DatabaseCluster'
    Export:
      Name: !Join [ '-', [ !Ref 'AWS::StackName', 'DBClusterName' ] ]
  EndpointAddress:
    Description: The Endpoint Address of this Database cluster writer
    Value: !GetAtt 'DatabaseCluster.Endpoint.Address'
    Export:
      Name: !Join [ '-', [ !Ref 'AWS::StackName', 'EndpointAddress' ] ]
  EndpointPort:
    Description: The Endpoint port of this Database cluster
    Value: !GetAtt 'DatabaseCluster.Endpoint.Port'
    Export:
      Name: !Join [ '-', [ !Ref 'AWS::StackName', 'EndpointPort' ] ]
  ReadEndpointAddress:
    Description: The Endpoint Address of this Database cluster reader
    Value: !GetAtt 'DatabaseCluster.ReadEndpoint.Address'
    Export:
      Name: !Join [ '-', [ !Ref 'AWS::StackName', 'ReadEndpointAddress' ] ]